{
    "name": "Happy Number",
    "id": "happy-number",
    "discuss_link": "",
    "desc": "<p>\n    A <strong>happy number</strong> is a number defined by the following process: <br>Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process <strong>ends in 1</strong> are happy numbers, while those that do not end in 1 are unhappy numbers (or sad numbers).\n</p>\n<hr>\n<p>\n    For example: 19 is happy, as the associated sequence is: \n</p>\n<p>\n    <dl><dd>1<sup>2</sup> + 9<sup>2</sup> = 82</dd>\n<dd>8<sup>2</sup> + 2<sup>2</sup> = 68</dd>\n<dd>6<sup>2</sup> + 8<sup>2</sup> = 100</dd>\n<dd>1<sup>2</sup> + 0<sup>2</sup> + 0<sup>2</sup> = 1.</dd></dl>\n</p>\n\n<p>4 is unhappy because it ends in the cycle:</p>\n<p>4, 16, 37, 58, 89, 145, 42, 20, 4, ...</p>",
    "difficulty": "Medium",
    "source": "PureStorage",
    "time": "2015-03-15 20:59:50",
    "tags": [
        "Math"
    ],
    "code_cpp": "bool happy(int n) {\n}",
    "code_java": "public class Solution {\n    public boolean happy(int n) {\n    }\n}",
    "code_ruby": "# @param n,integer\n# @return boolean\ndef happy(n)\nend",
    "code_python": "# @param n,integer\n# @return boolean\ndef happy(n):",
    "code_lua": "-- @param n,integer\n-- @return boolean\nfunction happy(n)\nend",
    "code_scala": "",
    "in_type_cpp": [
        "int"
    ],
    "ret_type_cpp": "bool",
    "out_type_cpp": "bool",
    "judge_type_cpp": "equal",
    "in_type_java": [
        "int"
    ],
    "ret_type_java": "boolean",
    "out_type_java": "boolean",
    "out_type_scala": "Boolean",
    "judge_type_java": "equal",
    "judge_type_ruby": "equal",
    "judge_type_python": "equal",
    "judge_type_lua": "equal",
    "judge_call": "happy(@)"
}