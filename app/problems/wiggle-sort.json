{
    "name" : "Wiggle Sort",
    "discuss_link": "http://www.fgdsb.com/2015/01/20/special-sorting/",
    "desc" : "<p>Write a function to convert the array into alternate increasing decreasing numbers: <br><br><code>a[0] <= a[1] >= a[2] <= a[3] >=...</code><br><br><b>Note</b>: You should solve it in place and one pass.</p>",
    "code_cpp" : "void wiggle_sort(vector<int>& arr) {\n}",
    "code_java" : "void wiggle_sort(int[] arr) {\n}",
    "code_ruby" : "def wiggle_sort(arr)\nend",

    "in_type_cpp" : ["vector<int>"],
    "ret_type_cpp" : "void",
    "out_type_cpp" : "vector<int>",
    "judge_type_cpp" : "!test_wiggle(in_0[i])",

    "in_type_java" : ["int[]"],
    "ret_type_java" : "void",
    "out_type_java" : "int[]",
    "judge_type_java" : "!common.test_wiggle(in_0[i])",

    "judge_type_ruby" : "!test_wiggle(in_0[i])",

    "judge_call" : "wiggle_sort",
    "test_in" : [
        ["{1, 2, 3}"],
        ["{1, 3, 5, 7, 9}"],
        ["{9, 7, 4, 8, 1}"]
    ],
    "test_out" : [
        ["{1, 3, 2}"],
        ["{1, 5, 3, 9, 7}"],
        ["{7, 9, 4, 8, 1}"]
    ]
}