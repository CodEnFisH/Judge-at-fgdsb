{
    "name": "Coin Change Problem",
    "id": "coin-change",
    "discuss_link": "http://www.fgdsb.com/2015/01/03/coin-change-problem/",
    "desc": "<p>Given a set of currency denominations, find the minimum number of coins needed to represent an amount.</p>\n<p>Return <code>0</code> if you can't use your coins to represent the target amount.</p>\n<p>For example:</p>\n<p>Suppose you have two kinds of coins: <code>1, 2</code>. In order to represent <code>3</code>, you have two options:</p>\n<p><code>1 + 1 + 1 = 3</code> or</p>\n<p><code>1 + 2 = 3</code> </p>\n<p>So the minimum number of coins is <code>2</code>.</p>",
    "difficulty": "Medium",
    "source": "Google",
    "time": "2015-02-15 23:46:09",
    "tags": [
        "DP"
    ],
    "code_cpp": "int min_coins(vector<int>& coins, int target) {\n}",
    "code_java": "public class Solution {\n    public int min_coins(int[] coins, int target) {\n    }\n}",
    "code_ruby": "# @param coins: array of integers, target: integer\n# @return integer\ndef min_coins(coins, target)\nend",
    "code_python": "# @param coins: list of integers, target: integer\n# @return integer\ndef min_coins(coins, target):",
    "code_lua": "-- @param coins: table of integers, target: integer\n-- @return integer\nfunction min_coins(coins, target)\nend",
    "in_type_cpp": [
        "vector<int>",
        "int"
    ],
    "ret_type_cpp": "int",
    "out_type_cpp": "int",
    "judge_type_cpp": "equal",
    "in_type_java": [
        "int[]",
        "int"
    ],
    "ret_type_java": "int",
    "out_type_java": "int",
    "judge_type_java": "equal",
    "judge_type_ruby": "equal",
    "judge_type_python": "equal",
    "judge_type_lua": "equal",
    "judge_call": "min_coins(@)"
}